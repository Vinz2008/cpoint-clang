import clang.cpoint
import @std/print.cpoint
import @std/process.cpoint

func cursorVisitor(cursor : struct CXCursor, parent : struct CXCursor, client_data : CXClientData) u32 {
    printstr("cursorVisitor")
    var cursorKind = clang::getCursorKind(cursor)
    CXChildVisitResult::CXChildVisit_Recurse
}

func main(){
    var cursor : struct CXCursor
    var index = clang::createIndex(0, 0)
    if index == null {
        #panic("Unable to parse create index")
    }
    if argc < 2 {
        #panic("missing filename arg")
    }
    var path = argv[1]
    var unit = clang::parseTranslationUnit(index, path, null, 0, null, 0, CXTranslationUnit_Flags::CXTranslationUnit_None)
    if unit == null {
        #panic("Unable to parse Translation Unit")
    }
    cursor = clang::getTranslationUnitCursor(unit)
    clang::visitChildren(cursor, cursorVisitor, null)
    clang::disposeTranslationUnit(unit)
    clang::disposeIndex(index)
    0
}
